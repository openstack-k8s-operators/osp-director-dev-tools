# Set the exit status for the command
set -e

PUB_NETWORK_ID=$(openstack --os-cloud overcloud network list -f value -c ID --name public)
if [ -z "$PUB_NETWORK_ID" ]; then
  openstack --os-cloud overcloud network create public --external
  openstack --os-cloud overcloud subnet create ext --subnet-range 192.168.25.96/28 --gateway 192.168.25.1 --no-dhcp --network public
  openstack --os-cloud overcloud network create private --share
  openstack --os-cloud overcloud subnet create priv --subnet-range 192.168.0.0/24 --network private
  openstack --os-cloud overcloud router create priv_router
  openstack --os-cloud overcloud router add subnet priv_router priv
  openstack --os-cloud overcloud router set priv_router --external-gateway public
  PUB_NETWORK_ID=$(openstack --os-cloud overcloud network list -f value -c ID --name public)
fi

# Create a tempest workspace, use the shared directory so that the files
# in it are accessible from the host as well.
mkdir -p /var/lib/tempest/tempest_workspace
tempest init /var/lib/tempest/tempest_workspace

# change directory to tempest_workspace
pushd /var/lib/tempest/tempest_workspace

# export TEMPESTCONF environment variable for easier later usage
export TEMPESTCONF="/usr/bin/discover-tempest-config"

# Execute the discover-tempest-config in order to generate tempest.conf
# Set --out to /home/stack/tempest_workspace/tempest.conf so that the
# tempest.conf file is later accessible from host machine as well.
# Set --deployer-input to point to the tempest-deployer-input.conf
# located in the shared directory.
$TEMPESTCONF \
  --out /var/lib/tempest/tempest_workspace/etc/tempest.conf \
  --deployer-input /var/lib/tempest/tempest-deployer-input.conf \
  --debug \
  --create \
  --network-id ${PUB_NETWORK_ID} \
  object-storage.reseller_admin ResellerAdmin

tempest cleanup --init-saved-state

if [ -f "/var/lib/tempest/whitelist_file" ]; then
  tempest run --whitelist-file /var/lib/tempest/whitelist_file
else
  # Run for example smoke tests
  tempest run --smoke
fi

tempest cleanup
