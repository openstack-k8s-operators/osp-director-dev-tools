# Set the exit status for the command
set -e

# RHEL9 workaroud, allow LEGACY cryptographic policies for SHA1
sudo update-crypto-policies --set LEGACY

PUB_NETWORK_ID=$(openstack --os-cloud overcloud network list -f value -c ID --name public)
if [ -z "$PUB_NETWORK_ID" ]; then
  openstack --os-cloud overcloud network create public --external  --provider-network-type flat --provider-physical-network datacentre
  openstack --os-cloud overcloud network create private --share
{% if "ipv6" in osp.extrafeatures %}
  openstack --os-cloud overcloud subnet create pub_sub --subnet-range 2001:db8:fd00:1000::/64 --ip-version 6 --gateway 2001:db8:fd00:1000::1 --allocation-pool start=2001:db8:fd00:1000:ffff::1,end=2001:db8:fd00:1000:ffff::fffe --ipv6-address-mode slaac --ipv6-ra-mode slaac --network public
  openstack --os-cloud overcloud subnet create priv_sub --subnet-range 2001:db8:fd00:6000::/64 --ipv6-address-mode slaac --ipv6-ra-mode slaac --ip-version 6 --network private
{% else %}
  openstack --os-cloud overcloud subnet create pub_sub --subnet-range 10.0.0.0/24 --allocation-pool start=10.0.0.100,end=10.0.0.150 --gateway 10.0.0.1 --no-dhcp --network public
  openstack --os-cloud overcloud subnet create priv_sub --subnet-range 192.168.0.0/24 --network private
{% endif %}
  openstack --os-cloud overcloud router create priv_router
  openstack --os-cloud overcloud router add subnet priv_router priv_sub
  openstack --os-cloud overcloud router set priv_router --external-gateway public
  PUB_NETWORK_ID=$(openstack --os-cloud overcloud network list -f value -c ID --name public)
fi

# Create a tempest workspace, use the shared directory so that the files
# in it are accessible from the host as well.
mkdir -p /var/lib/tempest/tempest_workspace
tempest init /var/lib/tempest/tempest_workspace

# change directory to tempest_workspace
pushd /var/lib/tempest/tempest_workspace

# export TEMPESTCONF environment variable for easier later usage
export TEMPESTCONF="/usr/bin/discover-tempest-config"

# Execute the discover-tempest-config in order to generate tempest.conf
# Set --out to /home/stack/tempest_workspace/tempest.conf so that the
# tempest.conf file is later accessible from host machine as well.
# Set --deployer-input to point to the tempest-deployer-input.conf
# located in the shared directory.
$TEMPESTCONF \
  --out /var/lib/tempest/tempest_workspace/etc/tempest.conf \
  --deployer-input /var/lib/tempest/tempest-deployer-input.conf \
  --debug \
  --create \
  --network-id ${PUB_NETWORK_ID} \
{% if tempest_disable_feature_dict is defined and tempest_disable_feature_dict|length %}
{% for component, features in tempest_disable_feature_dict.items() %}
{% for feature, setting in features.items() %}
  --remove {{ component }}.{{ feature }} {{ setting }} \
{% endfor %}
{% endfor %}
{% endif %}
{% if tempest_enable_feature_dict is defined and tempest_enable_feature_dict|length %}
{% for component, features in tempest_enable_feature_dict.items() %}
{% for feature, setting in features.items() %}
  {{ component }}.{{ feature }} {{ setting }} \
{% endfor %}
{% endfor %}
{% endif %}
  object-storage.reseller_admin ResellerAdmin

tempest cleanup --init-saved-state

{% if (tempest_smoketest|bool) %}
  # Run for example smoke tests
  tempest run --smoke
{% else %}
  tempest run --regex "{{ tempest_test_dict.regex }}" \
    --include-list /var/lib/tempest/include_file \
    --exclude-list /var/lib/tempest/exclude_file
{% endif %}

tempest cleanup
