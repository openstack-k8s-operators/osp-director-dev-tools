apiVersion: osp-director.openstack.org/v1beta1
kind: OpenStackNetConfig
metadata:
  name: openstacknetconfig
spec:
  attachConfigurations:
{% for nodeConfName, nodeConfPolicy in osp.attach_configs.items() %}
    {{ nodeConfName }}:
      nodeNetworkConfigurationPolicy:
        nodeSelector:
          node-role.kubernetes.io/worker: ""
        desiredState:
          interfaces:
{% for ifcfg in nodeConfPolicy.interfaces %}
{% if ifcfg.type == "bridge" %}
          - bridge:
              options:
                stp:
                  enabled: false
              port:
              - name: {{ ifcfg.interface }}
            description: Linux bridge with {{ ifcfg.interface }} as a port
            name: {{ ifcfg.name }}
            type: linux-bridge
{% elif ifcfg.type ==  "ethernet" %}
          - name: {{ ifcfg.interface }}
            description: Configuring {{ ifcfg.interface }} on workers
            type: ethernet
{% endif %}
            state: up
            ipv4:
              enabled: false
            ipv6:
              enabled: false
{% if ifcfg.mtu is defined %}
            mtu: {{ ifcfg.mtu }}
{% endif %}
{% endfor %}
{% endfor %}
  domainName: {{ osp.domain_name }}
{% if osp.dns_servers is defined and osp.dns_servers|length %}
  dnsServers: {{ osp.dns_servers }}
{% endif %}
{% if osp.dns_search_domains is defined and osp.dns_search_domains|length %}
  dnsSearchDomains : {{ osp.dns_search_domains }}
{% endif %}
  networks:
{% for id, net in osp_networks.items() %}
  - name: {{ net.name }}
    nameLower: {{ net.name_lower }}
{% if net.vip is defined %}
    vip: {{ net.vip }}
{% endif %}
{% if net.mtu is defined %}
    mtu: {{ net.mtu }}
{% endif %}
{% if net.is_control_plane is defined %}
    isControlPlane: true
{% endif %}
    subnets:
{% for subnet in net.subnets %}
    - name: {{ subnet.name }}
{% if subnet.ipv4 is defined %}
      ipv4:
        allocationEnd: {{ subnet.ipv4.allocation.end }}
        allocationStart: {{ subnet.ipv4.allocation.start }}
        cidr: {{ subnet.ipv4.cidr }}
{% if subnet.ipv4.gateway is defined %}
        gateway: {{ subnet.ipv4.gateway }}
{% endif %}
{% if subnet.ipv4.routes is defined %}
        routes:
{% for route in subnet.ipv4.routes %}
        - destination: {{ route.destination }}
          nexthop: {{ route.nexthop }}
{% endfor %}
{% endif %}
{% endif %}
{% if subnet.ipv6 is defined %}
      ipv6:
        allocationEnd: {{ subnet.ipv6.allocation.end }}
        allocationStart: {{ subnet.ipv6.allocation.start }}
        cidr: {{ subnet.ipv6.cidr }}
{% if subnet.ipv6.gateway is defined %}
        gateway: {{ subnet.ipv6.gateway }}
{% endif %}
{% if subnet.ipv6.routes is defined %}
        routes:
{% for route in subnet.ipv6.routes %}
        - destination: {{ route.destination }}
          nexthop: {{ route.nexthop }}
{% endfor %}
{% endif %}
{% endif %}
{% if subnet.vlan is defined %}
      vlan: {{ subnet.vlan }}
{% endif %}
      attachConfiguration: {{ subnet.attach_config }}
{% endfor %}
{% endfor %}
{% if osp.ovn_bridge_mac_mappings is defined %}
  ovnBridgeMacMappings:
{% if osp.ovn_bridge_mac_mappings.phys_networks is defined and osp.ovn_bridge_mac_mappings.phys_networks|length %}
    physNetworks:
{% for physnet in osp.ovn_bridge_mac_mappings.phys_networks %}
    - macPrefix: {{ physnet.prefix  }}
      name: {{ physnet.name }}
{% endfor %}
{% endif %}
{% endif %}
{% if osp_reservations is defined and osp_reservations|length %}
  reservations:
{% for node, reservations in osp_reservations.items() %}
    {{ node }}:
{% if reservations.ip_reservations is defined and reservations.ip_reservations|length %}
      ipReservations:
{% for subnet, reservation in reservations.ip_reservations.items() %}
        {{ subnet  }}: {{ reservation }}
{% endfor %}
{% endif %}
{% if reservations.mac_reservations is defined and reservations.mac_reservations|length %}
      macReservations:
{% for physnet, reservation in reservations.mac_reservations.items() %}
        {{ physnet }}: {{ reservation }}
{% endfor %}
{% endif %}
{% endfor %}
{% endif %}
  preserveReservations: {{ osp.preserve_reservations|default(true)|bool }}
