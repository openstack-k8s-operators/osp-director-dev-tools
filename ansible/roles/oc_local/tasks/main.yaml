- name: Create local working directory
  file:
    state: directory
    path: "{{ local_working_dir }}"
    mode: 0755
  register: working_directory

- name: Get working directory absolute path
  set_fact:
    working_dir: "{{ working_directory.path }}"

- name: Register working directory and kubeconfig paths
  set_fact:
    working_bin_dir: "{{ working_dir }}/bin"
    working_src_dir: "{{ working_dir }}/src"
    working_yamls_dir: "{{ working_dir }}/yamls"
    working_log_dir: "{{ working_dir }}/logs"
    working_vars_dir: "{{ working_dir }}/vars"
    kubeconfig: "{{ working_dir }}/kubeconfig"

- name: Register oc and github operator paths
  set_fact:
    oc_env_path: "{{ working_bin_dir }}:{{ ansible_env.PATH | default('') }}"
    k8s_operators_dir: "{{ working_src_dir }}/github.com/openstack-k8s-operators"

- name: Create common subdirectories
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  loop:
    - "{{ working_bin_dir }}"
    - "{{ working_src_dir }}"
    - "{{ working_yamls_dir }}"
    - "{{ working_log_dir }}"
    - "{{ working_vars_dir }}"
    - "{{ k8s_operators_dir }}"

- name: pull "{{ osp_release_auto_url }}" if defined and include as var file
  when: osp_release_auto_url is defined
  block:
    - name: Register osp_release_auto_url
      set_fact:
        osp_release_auto_file: "{{ working_vars_dir }}/container_image_prepare.yaml"

    - name: Download {{ osp_release_auto_url }}
      get_url:
        url: "{{ osp_release_auto_url }}"
        dest: "{{ osp_release_auto_file }}"
        mode: '0644'
        timeout: 30

    # dict container-image-prepare is not conform with ansible var naming convention.
    # therefore can not just be included as var file
    - name: Read "{{ osp_release_auto_file }}" content
      set_fact:
        osp_release_auto_content: "{{ lookup('file', '{{ osp_release_auto_file }}') | default({}) }}"

    - name: Create osp_release_auto dict from input of "{{ osp_release_auto_file }}"
      set_fact:
        osp_release_auto: "{{ osp_release_auto | default({}) | combine ({ item.key : item.value }) }}"
      when: osp_release_auto_content is defined
      with_items:
        - { 'key': 'debug' , 'value': "{{ osp_release_auto_content }}"}
        - { 'key': 'namespace' , 'value': "{{ osp_release_auto_content | regex_search('namespace: (.+)', '\\1') | first }}"}
        - { 'key': 'prefix' , 'value': "{{ osp_release_auto_content | regex_search('prefix: (.+)', '\\1') | first }}"}
        - { 'key': 'name_prefix' , 'value': "{{ osp_release_auto_content | regex_search('name_prefix: (.+)', '\\1') | first }}"}
        - { 'key': 'tag' , 'value': "{{ osp_release_auto_content | regex_search('tag: (.+)', '\\1') | first }}"}
        - { 'key': 'ceph_namespace' , 'value': "{{ osp_release_auto_content | regex_search('ceph[-_]namespace: (.+)', '\\1') | first }}"}
        - { 'key': 'ceph_image' , 'value': "{{ osp_release_auto_content | regex_search('ceph[-_]image: (.+)', '\\1') | first }}"}
        - { 'key': 'ceph_tag' , 'value': "{{ osp_release_auto_content | regex_search('ceph[-_]tag: (.+)', '\\1') | first }}"}
        - { 'key': 'release' , 'value': "{{ osp_release_auto_content | regex_search('rhosp: (.+)', '\\1') | first }}"}
        - { 'key': 'compose' , 'value': "{{ osp_release_auto_content | regex_search('id: (.+)', '\\1') | first }}"}
        - { 'key': 'rhel_version' , 'value': "{{ osp_release_auto_content | regex_search('rhel_version: (.+)', '\\1') | first }}"}

