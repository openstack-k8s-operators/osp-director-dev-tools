---
- name: Create local working directory
  ansible.builtin.file:
    state: directory
    path: "{{ local_working_dir }}"
    mode: "0755"
  register: working_directory

- name: Gather facts
  ansible.builtin.setup:
    gather_subset:
      - min

- name: Get working directory absolute path
  ansible.builtin.set_fact:
    working_dir: "{{ working_directory.path }}"

- name: Register working directory and kubeconfig paths
  ansible.builtin.set_fact:
    working_bin_dir: "{{ working_dir }}/bin"
    working_src_dir: "{{ working_dir }}/src"
    working_yamls_dir: "{{ working_dir }}/yamls"
    working_log_dir: "{{ working_dir }}/logs"
    working_vars_dir: "{{ working_dir }}/vars"
    kubeconfig: "{{ working_dir }}/kubeconfig"

- name: Register oc and github operator paths
  ansible.builtin.set_fact:
    oc_env_path: "{{ working_bin_dir }}:{{ ansible_env.PATH | default('') }}"
    k8s_operators_dir: "{{ working_src_dir }}/github.com/openstack-k8s-operators"

- name: Create common subdirectories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
  loop:
    - "{{ working_bin_dir }}"
    - "{{ working_src_dir }}"
    - "{{ working_yamls_dir }}"
    - "{{ working_log_dir }}"
    - "{{ working_vars_dir }}"
    - "{{ k8s_operators_dir }}"

- name: Pull "{{ osp_release_auto_url }}/{{ osp_release_auto_version }}/{{ osp_release_auto_compose }}" if defined and set osp_release_auto fact
  when: osp_release_auto_url is defined
  block:
    # Warning, force: true doesn't do anything in uri module....
    # So do not set dest. If the file exists the mtime will be sent as the etag HTTP header
    # and the web server will return 304 not modified...
    # when it's not the same url we are fetching!!!!

    - name: Download {{ osp_release_auto_url }}/{{ osp_release_auto_version }}/{{ osp_release_auto_compose }}/container_image_prepare.yaml
      ansible.builtin.uri:
        url: "{{ osp_release_auto_url }}/{{ osp_release_auto_version }}/{{ osp_release_auto_compose }}/container_image_prepare.yaml"
        return_content: true
        timeout: 30
      register: osp_release_auto_content_rc

    - name: Create osp_release_auto dict"
      ansible.builtin.set_fact:
        osp_release_auto: "{{ osp_release_auto | default({}) | combine({item.key: item.value}) }}"
      with_items:
        - { "key": "debug", "value": "{{ osp_release_auto_content_rc.content }}" }
        - key: "registry_proxy"
          value: >-
            {{ (osp_release_auto_content_rc.content | regex_findall('namespace: (.+)', '\\1') | first | default(''))
            .split('/') | first }}
        - key: "namespace"
          value: >-
            {{ (osp_release_auto_content_rc.content | regex_findall('namespace: (.+)', '\\1') | first | default(''))
            | trim("'") | trim }}
        - key: "prefix"
          value: >-
            {{ (osp_release_auto_content_rc.content | regex_findall('prefix: (.+)', '\\1') | first | default(''))
            | trim("'") | trim }}
        # Ensure name_prefix always ends with a dash for consistency
        - key: "name_prefix"
          value: >-
            {{ (osp_release_auto_content_rc.content | regex_findall('name_prefix: (.+)', '\\1') | first | default(''))
            | trim("'") | trim | regex_replace('-*$', '') ~ '-' }}
        - key: "tag"
          value: >-
            {{ (osp_release_auto_content_rc.content | regex_findall('tag: (.+)', '\\1') | first | default(''))
            |trim("'") | trim }}
        - key: "ceph_namespace"
          value: >-
            {{ (osp_release_auto_content_rc.content | regex_findall('ceph[-_]namespace: (.+)', '\\1') | first | default(''))
            | trim("'") | trim }}
        - key: "ceph_image"
          value: >-
            {{ (osp_release_auto_content_rc.content | regex_findall('ceph[-_]image: (.+)', '\\1') | first | default(''))
            | trim("'") | trim }}
        - key: "ceph_tag"
          value: >-
            {{ (osp_release_auto_content_rc.content | regex_findall('ceph[-_]tag: (.+)', '\\1') | first | default(''))
            | trim("'") | trim }}
        - key: "release"
          value: >-
            {{ osp_release_auto_content_rc.content | regex_findall('rhosp: (.+)', '\\1') | first | default('') }}
        - key: "compose"
          value: >-
            {{ osp_release_auto_content_rc.content | regex_findall('id: (.+)', '\\1') | first | default('') }}
        - key: "rhel_version"
          value: >-
            {{ osp_release_auto_content_rc.content | regex_findall('rhel_version: (.+)', '\\1') | first | default('') }}

- name: Create osp_release_auto_rhel8 dict
  when: osp_release_auto_version_rhel8 | default('')
  block:
    - name: Download {{ osp_release_auto_url }}/{{ osp_release_auto_version }}/{{ osp_release_auto_compose }}/RHEL8_COMPOSE_ID if exists
      ansible.builtin.uri:
        url: "{{ osp_release_auto_url }}/{{ osp_release_auto_version }}/{{ osp_release_auto_compose }}/RHEL8_COMPOSE_ID"
        return_content: true
        timeout: 30
      register: osp_release_auto_rhel8_compose_id_rc

    - name: Download {{ osp_release_auto_url }}/{{ osp_release_auto_version_rhel8 }}/{{ osp_release_auto_rhel8_compose_id_rc.content | trim
        }}/container_image_prepare.yaml }}/container_image_prepare.yaml
      ansible.builtin.uri:
        url: >-
          {{ osp_release_auto_url }}/{{ osp_release_auto_version_rhel8 }}/{{ osp_release_auto_rhel8_compose_id_rc.content | trim }}/container_image_prepare.yaml
        return_content: true
        timeout: 30
      register: osp_release_auto_content_rc

    - name: Create osp_release_auto_rhel8 dict"
      ansible.builtin.set_fact:
        osp_release_auto_rhel8: "{{ osp_release_auto_rhel8 | default({}) | combine({item.key: item.value}) }}"
      with_items:
        - { "key": "debug", "value": "{{ osp_release_auto_content_rc.content }}" }
        - key: "registry_proxy"
          value: >-
            {{ (osp_release_auto_content_rc.content | regex_findall('namespace: (.+)', '\\1') | first | default(''))
            .split('/') | first }}
        - key: "namespace"
          value: >-
            {{ (osp_release_auto_content_rc.content | regex_findall('namespace: (.+)', '\\1') | first | default(''))
            | trim("'") | trim }}
        - key: "prefix"
          value: >-
            {{ (osp_release_auto_content_rc.content | regex_findall('prefix: (.+)', '\\1') | first | default(''))
            | trim("'") | trim }}
        # Ensure name_prefix always ends with a dash for consistency
        - key: "name_prefix"
          value: >-
            {{ (osp_release_auto_content_rc.content | regex_findall('name_prefix: (.+)', '\\1') | first | default(''))
            | trim("'") | trim | regex_replace('-*$', '') ~ '-' }}
        - key: "tag"
          value: >-
            {{ (osp_release_auto_content_rc.content | regex_findall('tag: (.+)', '\\1') | first | default(''))
            | trim("'") | trim }}
        - key: "ceph_namespace"
          value: >-
            {{ (osp_release_auto_content_rc.content | regex_findall('ceph[-_]namespace: (.+)', '\\1') | first | default(''))
            | trim("'") | trim }}
        - key: "ceph_image"
          value: >-
            {{ (osp_release_auto_content_rc.content | regex_findall('ceph[-_]image: (.+)', '\\1') | first | default(''))
            | trim("'") | trim }}
        - key: "ceph_tag"
          value: >-
            {{ (osp_release_auto_content_rc.content | regex_findall('ceph[-_]tag: (.+)', '\\1') | first | default(''))
            | trim("'") | trim }}
        - key: "release"
          value: >-
            {{ osp_release_auto_content_rc.content | regex_findall('rhosp: (.+)', '\\1') | first | default('') }}
        - key: "compose"
          value: >-
            {{ osp_release_auto_content_rc.content | regex_findall('id: (.+)', '\\1') | first | default('') }}
        - key: "rhel_version"
          value: >-
            {{ osp_release_auto_content_rc.content | regex_findall('rhel_version: (.+)', '\\1') | first | default('') }}

- name: Add insecure registies to /etc/containers/registries.conf
  when: podman_insecure_registries is defined
  become: true
  become_user: root
  ansible.builtin.template:
    src: registries.conf.j2
    dest: /etc/containers/registries.conf.d/osp-director-dev-tools.conf
    mode: "0644"

# Caching the values if the params do not change
- name: Set current osp_release_auto_url_cache_key
  ansible.builtin.set_fact:
    osp_release_auto_url_cache_key:
      "{{ osp_release_auto_url }}/{{ osp_release_auto_version }}/{{ osp_release_auto_compose }}:{{ osp_release_auto_version_rhel8 |
      default('') }}"
