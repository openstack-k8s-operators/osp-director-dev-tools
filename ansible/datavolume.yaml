#!/usr/bin/env ansible-playbook
---
- hosts: localhost
  vars_files: "vars/default.yaml"
  roles:
  - oc_local

  tasks:

  - name: Set path to RHEL base image for dev-scripts
    set_fact:
      osp_controller_base_image_url_path: "{{ base_path }}/ironic/html/images/{{ osp_controller_base_image_url | basename }}"
    when: not (ocp_ai|bool)

  - name: Set path to RHEL base image for assisted installer
    set_fact:
      osp_controller_base_image_url_path: "{{ ocp_ai_http_store_dir | default('/opt/http_store/data', true) }}/{{ osp_controller_base_image_url | basename }}"
    when: ocp_ai|bool

  # NOTE: we copy this to the Ironic images directory to reuse it for
  # the provision server (openstackbaremetalsets). This avoids downloading
  # the same image twice.
  - name: Check if {{ osp_controller_base_image_url | basename }} already exist
    stat:
      path: "{{ osp_controller_base_image_url_path }}"
    register: stat_result

  - name: Get RHEL guest base image
    become: true
    become_user: ocp
    when: not stat_result.stat.exists
    block:
      - name: Download RHEL guest image {{ osp_controller_base_image_url }}
        get_url:
          url: "{{ osp_controller_base_image_url }}"
          dest: "{{ osp_controller_base_image_url_path }}"
          owner: ocp
          group: ocp
          mode: '0644'
          timeout: 30

      - name: Remove net.ifnames=0 kernel param from {{ osp_controller_base_image_url_path }}
        shell: |
          #!/bin/bash
          set -e
          virt-customize -a "{{ osp_controller_base_image_url_path }}" --run-command 'sed -i -e "s/^\(kernelopts=.*\)net.ifnames=0 \(.*\)/\1\2/" /boot/grub2/grubenv'

  - name: does the datavolume already exist
    ignore_errors: true
    shell: >
      oc get datavolume openstack-base-img -n {{ namespace }}
    environment: &oc_env
      PATH: "{{ oc_env_path }}"
      KUBECONFIG: "{{ kubeconfig }}"
    register: datavolume_switch

  - name: Deploy the datavolume
    when: datavolume_switch.rc == 1
    environment:
      <<: *oc_env
    block:
      - name: Upload OSP Controller base image
        shell: |
          virtctl image-upload dv openstack-base-img -n {{ namespace }} --size={{ osp_controller_disk_size }}G --image-path={{ osp_controller_base_image_url_path }} --insecure
    rescue:
      - name: Remove datavolume from failed OSP Controller upload
        command: oc delete datavolume openstack-base-img -n {{ namespace }}
        ignore_errors: yes

      - name: Re-Upload OSP Controller base image
        shell: |
          virtctl image-upload dv openstack-base-img -n {{ namespace }} --size={{ osp_controller_disk_size }}G --image-path={{ osp_controller_base_image_url_path }} --insecure

  - name: Wait for the datavolume to be ready
    retries: 5
    delay: 5
    shell: |
      oc wait datavolume openstack-base-img --for condition=Ready -n "{{ namespace }}" --timeout={{ default_timeout }}s
    environment:
      <<: *oc_env
