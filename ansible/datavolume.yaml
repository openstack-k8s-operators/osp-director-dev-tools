#!/usr/bin/env ansible-playbook
---
- hosts: localhost
  vars_files: "vars/default.yaml"
  roles:
  - oc_local

  tasks:
  - name: Set combined osp dict
    set_fact:
      osp: "{{ osp_defaults | combine((osp_release_defaults | default({})), recursive=True) | combine((osp_local | default({})), recursive=True) }}"

  - name: Set path to RHEL base image for dev-scripts
    set_fact:
      osp_base_image_url_path: "{{ base_path }}/ironic/html/images/{{ osp.base_image_url | basename }}"
    when: not (ocp_ai|bool)

  - name: Set path to RHEL base image for assisted installer
    set_fact:
      osp_base_image_url_path: "/opt/http_store/data/images/{{ osp.base_image_url | basename }}"
    when: ocp_ai|bool

  # NOTE: we copy this to the Ironic images directory to reuse it for
  # the provision server (openstackbaremetalsets). This avoids downloading
  # the same image twice.
  - name: Check if {{ osp.base_image_url | basename }} already exist
    stat:
      path: "{{ osp_base_image_url_path }}"
    register: stat_result

  # Note: the CentOS image right now has some ifcfg configs, lets make sure they are deleted
  - name: Get RHEL/CentOS guest base image
    become: true
    become_user: ocp
    when: not stat_result.stat.exists
    block:
      - name: Download RHEL/CentOS guest image {{ osp.base_image_url }}
        get_url:
          url: "{{ osp.base_image_url }}"
          dest: "{{ osp_base_image_url_path }}"
          owner: ocp
          group: ocp
          mode: '0644'
          timeout: 30

      - name: Remove net.ifnames=0 kernel param from {{ osp_base_image_url_path }}
        shell: |
          #!/bin/bash
          set -e
          virt-customize -a "{{ osp_base_image_url_path }}" \
            --run-command 'sed -i -e "s/^\(GRUB_CMDLINE_LINUX=.*\)net.ifnames=0\s*\(.*\)/\1\2/" /etc/default/grub' \
            --run-command 'grub2-mkconfig -o /etc/grub2.cfg' \
            --run-command 'grub2-mkconfig -o /etc/grub2-efi.cfg' \
            --run-command 'rm -f /etc/sysconfig/network-scripts/ifcfg-ens* /etc/sysconfig/network-scripts/ifcfg-eth*'
        environment:
          LIBGUESTFS_BACKEND: direct

  - name: create datavolume for vmset roles
    include_tasks: datavolume_tasks.yaml
    vars:
      _datavolume: "{{ _role | lower }}-base-img"
    loop: "{{ osp.vmset.keys() | list }}"
    loop_control:
      loop_var: _role
    when: osp.vmset[_role].count > 0
