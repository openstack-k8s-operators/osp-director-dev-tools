---
- hosts: convergence_base
  gather_facts: false
  tasks:
  - name: Include default variables
    include_vars: vars/default.yaml

  - name: Include AI variables
    include_vars: vars/ocp_ai.yaml


  ### EXECUTE ASSISTED INSTALLER PLAYBOOK

  - name: Run Assisted Installer
    become: true
    become_user: ocp
    block:
    - name: Delete existing AI cluster (if any)
      command: "aicli -U http://192.168.111.1:{{ ocp_ai_service_port | default('8090', true) }} delete cluster {{ ocp_cluster_name }}"
      environment:
        PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin
      register: delete_ai_cluster
      failed_when: delete_ai_cluster.stderr != "" and "Cluster {{ ocp_cluster_name }} not found" not in delete_ai_cluster.stderr

    - name: Create assisted installer execution bash script
      template:
        src: ai/cluster_mgnt_roles/run_playbook.sh.j2
        dest: "{{ base_path }}/cluster_mgnt_roles/run_playbook.sh"
        mode: '0755'

    - debug:
        msg: |
          Executing the assisted installer playbook. You can tail the logs at {{ base_path }}/ai.log on
          the host for progress.  Furthermore, you can view the assisted installer console by entering the
          URL http://192.168.111.1:8888/clusters/.  If you do not have direct access to that IP from
          your browser, you can use a tool like "sshuttle" to provide connectivity like so:
          sshuttle --dns -r <user>@<cluster host> 192.168.111.0/24.  You would then hit this
          URL in your browser: http://<cluster host>:8888/clusters/

    - name: Run the assisted installer playbook
      shell: |
        ./run_playbook.sh
      args:
        chdir: "{{ base_path }}/cluster_mgnt_roles"
      environment:
        ANSIBLE_HOST_KEY_CHECKING: false

    - name: Download assisted installer cluster kubeconfig and kubeadmin password
      shell: |
        aicli -U http://192.168.111.1:{{ ocp_ai_service_port | default('8090', true) }} download kubeconfig {{ ocp_cluster_name }}
        aicli -U http://192.168.111.1:{{ ocp_ai_service_port | default('8090', true) }} download kubeadmin-password {{ ocp_cluster_name }}
      args:
        chdir: "{{ base_path }}/cluster_mgnt_roles"
      environment:
        PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin

    - name: Set kubeconfig fact
      set_fact:
        ai_kubeconfig: lookup('file', '{{ base_path }}/cluster_mgnt_roles/kubeconfig.{{ ocp_cluster_name }}')

  - name: Create assisted installer kubeconfig locally
    block:
    - name: Include oc_local role
      include_role:
        name: oc_local

    - name: Include default variables
      include_vars: vars/default.yaml

    - name: Render kubeconfig
      template:
        src: ai/cluster_mgnt_roles/kubeconfig.j2
        dest: "{{ working_dir }}/kubeconfig"
        mode: '0664'

    delegate_to: localhost


- hosts: localhost
  vars_files: vars/default.yaml
  roles:
  - oc_local

  ### OC CLIENT

  tasks:
  - name: Get the ocp client tar gunzip file 4.6/4.7
    when: ocp_version < 4.8
    get_url:
      url: "https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest-{{ ocp_version }}/openshift-client-linux.tar.gz"
      dest: "/tmp/openshift-client-linux.tar.gz"
      mode: '0755'
      timeout: 30

  # FIXME: remove when 4.8 is hosted in the format above
  - name: Get the ocp client tar gunzip file 4.8
    when: ocp_version == 4.8
    get_url:
      url: "https://mirror.openshift.com/pub/openshift-v4/clients/ocp/4.8.2/openshift-client-linux.tar.gz"
      dest: "/tmp/openshift-client-linux.tar.gz"
      mode: '0755'
      timeout: 30

  - name: "Untar the openshift-client-linux.tar.gz"
    unarchive:
      src: "/tmp/openshift-client-linux.tar.gz"
      dest: "/tmp"
      mode: '0755'

  - name: Copy oc binary to /usr/local/bin
    become: true
    become_user: root
    copy:
      src: "/tmp/oc"
      dest: /usr/local/bin/
      mode: '0755'
